/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.Edition', null, global);
goog.exportSymbol('proto.EditionPatch', null, global);
goog.exportSymbol('proto.Editions', null, global);
goog.exportSymbol('proto.EthicsSchema', null, global);
goog.exportSymbol('proto.EthicsSchema.Node', null, global);
goog.exportSymbol('proto.EthicsSchema.NodeType', null, global);
goog.exportSymbol('proto.GetEditionsParams', null, global);
goog.exportSymbol('proto.GetSchemaParams', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EditionPatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EditionPatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.EditionPatch.displayName = 'proto.EditionPatch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EditionPatch.prototype.toObject = function(opt_includeInstance) {
  return proto.EditionPatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EditionPatch} msg The msg instance to transform.
 * @return {!Object}
 */
proto.EditionPatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: (f = msg.getTitle()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    editor: (f = msg.getEditor()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    year: (f = msg.getYear()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    languageCode: (f = msg.getLanguageCode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EditionPatch}
 */
proto.EditionPatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EditionPatch;
  return proto.EditionPatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EditionPatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EditionPatch}
 */
proto.EditionPatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setTitle(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setEditor(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setYear(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setLanguageCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EditionPatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EditionPatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EditionPatch} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.EditionPatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getEditor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getYear();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getLanguageCode();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.EditionPatch.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.EditionPatch.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue title = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.EditionPatch.prototype.getTitle = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.EditionPatch.prototype.setTitle = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.EditionPatch.prototype.clearTitle = function() {
  this.setTitle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EditionPatch.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue editor = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.EditionPatch.prototype.getEditor = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.EditionPatch.prototype.setEditor = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.EditionPatch.prototype.clearEditor = function() {
  this.setEditor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EditionPatch.prototype.hasEditor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int32Value year = 4;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.EditionPatch.prototype.getYear = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 4));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.EditionPatch.prototype.setYear = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.EditionPatch.prototype.clearYear = function() {
  this.setYear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EditionPatch.prototype.hasYear = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue language_code = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.EditionPatch.prototype.getLanguageCode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.EditionPatch.prototype.setLanguageCode = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.EditionPatch.prototype.clearLanguageCode = function() {
  this.setLanguageCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EditionPatch.prototype.hasLanguageCode = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetEditionsParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetEditionsParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GetEditionsParams.displayName = 'proto.GetEditionsParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetEditionsParams.prototype.toObject = function(opt_includeInstance) {
  return proto.GetEditionsParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetEditionsParams} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GetEditionsParams.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetEditionsParams}
 */
proto.GetEditionsParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetEditionsParams;
  return proto.GetEditionsParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetEditionsParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetEditionsParams}
 */
proto.GetEditionsParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetEditionsParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetEditionsParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetEditionsParams} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GetEditionsParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Edition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Edition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Edition.displayName = 'proto.Edition';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Edition.prototype.toObject = function(opt_includeInstance) {
  return proto.Edition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Edition} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Edition.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    editor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    year: jspb.Message.getFieldWithDefault(msg, 4, 0),
    languageCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Edition}
 */
proto.Edition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Edition;
  return proto.Edition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Edition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Edition}
 */
proto.Edition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Edition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Edition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Edition} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Edition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEditor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLanguageCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.Edition.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Edition.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.Edition.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Edition.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string editor = 3;
 * @return {string}
 */
proto.Edition.prototype.getEditor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Edition.prototype.setEditor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 year = 4;
 * @return {number}
 */
proto.Edition.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Edition.prototype.setYear = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string language_code = 5;
 * @return {string}
 */
proto.Edition.prototype.getLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Edition.prototype.setLanguageCode = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.Edition.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Edition.prototype.setCreatedAt = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.Edition.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Edition.prototype.setUpdatedAt = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Editions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Editions.repeatedFields_, null);
};
goog.inherits(proto.Editions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Editions.displayName = 'proto.Editions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Editions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Editions.prototype.toObject = function(opt_includeInstance) {
  return proto.Editions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Editions} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Editions.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.Edition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Editions}
 */
proto.Editions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Editions;
  return proto.Editions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Editions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Editions}
 */
proto.Editions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Edition;
      reader.readMessage(value,proto.Edition.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Editions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Editions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Editions} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Editions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Edition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edition data = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Edition>}
 */
proto.Editions.prototype.getDataList = function() {
  return /** @type{!Array.<!proto.Edition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Edition, 1));
};


/** @param {!Array.<!proto.Edition>} value */
proto.Editions.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Edition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Edition}
 */
proto.Editions.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Edition, opt_index);
};


proto.Editions.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetSchemaParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetSchemaParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GetSchemaParams.displayName = 'proto.GetSchemaParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetSchemaParams.prototype.toObject = function(opt_includeInstance) {
  return proto.GetSchemaParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetSchemaParams} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GetSchemaParams.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetSchemaParams}
 */
proto.GetSchemaParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetSchemaParams;
  return proto.GetSchemaParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetSchemaParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetSchemaParams}
 */
proto.GetSchemaParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetSchemaParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetSchemaParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetSchemaParams} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GetSchemaParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EthicsSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthicsSchema.repeatedFields_, null);
};
goog.inherits(proto.EthicsSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.EthicsSchema.displayName = 'proto.EthicsSchema';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EthicsSchema.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EthicsSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.EthicsSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EthicsSchema} msg The msg instance to transform.
 * @return {!Object}
 */
proto.EthicsSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    partsList: jspb.Message.toObjectList(msg.getPartsList(),
    proto.EthicsSchema.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EthicsSchema}
 */
proto.EthicsSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EthicsSchema;
  return proto.EthicsSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EthicsSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EthicsSchema}
 */
proto.EthicsSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EthicsSchema.Node;
      reader.readMessage(value,proto.EthicsSchema.Node.deserializeBinaryFromReader);
      msg.addParts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EthicsSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EthicsSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EthicsSchema} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.EthicsSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EthicsSchema.Node.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.EthicsSchema.NodeType = {
  UNSPECIFIED: 0,
  ANONYMOUS_FRAGMENT: 1,
  ALITER: 2,
  APPENDIX: 3,
  AXIOMA: 4,
  CAPUT: 5,
  COROLLARIUM: 6,
  DEFINITIO: 7,
  DEMONSTRATIO: 8,
  EXPLICATIO: 9,
  LEMMA: 11,
  PARS: 12,
  POSTULATUM: 13,
  PRAEFATIO: 14,
  PROPOSITIO: 15,
  SCHOLIUM: 16
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EthicsSchema.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthicsSchema.Node.repeatedFields_, proto.EthicsSchema.Node.oneofGroups_);
};
goog.inherits(proto.EthicsSchema.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.EthicsSchema.Node.displayName = 'proto.EthicsSchema.Node';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EthicsSchema.Node.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.EthicsSchema.Node.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.EthicsSchema.Node.IdentifierCase = {
  IDENTIFIER_NOT_SET: 0,
  NUM: 2,
  TITLE: 3
};

/**
 * @return {proto.EthicsSchema.Node.IdentifierCase}
 */
proto.EthicsSchema.Node.prototype.getIdentifierCase = function() {
  return /** @type {proto.EthicsSchema.Node.IdentifierCase} */(jspb.Message.computeOneofCase(this, proto.EthicsSchema.Node.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EthicsSchema.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.EthicsSchema.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EthicsSchema.Node} msg The msg instance to transform.
 * @return {!Object}
 */
proto.EthicsSchema.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    num: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.EthicsSchema.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EthicsSchema.Node}
 */
proto.EthicsSchema.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EthicsSchema.Node;
  return proto.EthicsSchema.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EthicsSchema.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EthicsSchema.Node}
 */
proto.EthicsSchema.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.EthicsSchema.NodeType} */ (reader.readEnum());
      msg.setNodeType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = new proto.EthicsSchema.Node;
      reader.readMessage(value,proto.EthicsSchema.Node.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EthicsSchema.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EthicsSchema.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EthicsSchema.Node} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.EthicsSchema.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.EthicsSchema.Node.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeType node_type = 1;
 * @return {!proto.EthicsSchema.NodeType}
 */
proto.EthicsSchema.Node.prototype.getNodeType = function() {
  return /** @type {!proto.EthicsSchema.NodeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.EthicsSchema.NodeType} value */
proto.EthicsSchema.Node.prototype.setNodeType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 num = 2;
 * @return {number}
 */
proto.EthicsSchema.Node.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.EthicsSchema.Node.prototype.setNum = function(value) {
  jspb.Message.setOneofField(this, 2, proto.EthicsSchema.Node.oneofGroups_[0], value);
};


proto.EthicsSchema.Node.prototype.clearNum = function() {
  jspb.Message.setOneofField(this, 2, proto.EthicsSchema.Node.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EthicsSchema.Node.prototype.hasNum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.EthicsSchema.Node.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.EthicsSchema.Node.prototype.setTitle = function(value) {
  jspb.Message.setOneofField(this, 3, proto.EthicsSchema.Node.oneofGroups_[0], value);
};


proto.EthicsSchema.Node.prototype.clearTitle = function() {
  jspb.Message.setOneofField(this, 3, proto.EthicsSchema.Node.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.EthicsSchema.Node.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Node children = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.EthicsSchema.Node>}
 */
proto.EthicsSchema.Node.prototype.getChildrenList = function() {
  return /** @type{!Array.<!proto.EthicsSchema.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EthicsSchema.Node, 4));
};


/** @param {!Array.<!proto.EthicsSchema.Node>} value */
proto.EthicsSchema.Node.prototype.setChildrenList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.EthicsSchema.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EthicsSchema.Node}
 */
proto.EthicsSchema.Node.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.EthicsSchema.Node, opt_index);
};


proto.EthicsSchema.Node.prototype.clearChildrenList = function() {
  this.setChildrenList([]);
};


/**
 * repeated Node parts = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.EthicsSchema.Node>}
 */
proto.EthicsSchema.prototype.getPartsList = function() {
  return /** @type{!Array.<!proto.EthicsSchema.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EthicsSchema.Node, 1));
};


/** @param {!Array.<!proto.EthicsSchema.Node>} value */
proto.EthicsSchema.prototype.setPartsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EthicsSchema.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EthicsSchema.Node}
 */
proto.EthicsSchema.prototype.addParts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EthicsSchema.Node, opt_index);
};


proto.EthicsSchema.prototype.clearPartsList = function() {
  this.setPartsList([]);
};


goog.object.extend(exports, proto);
