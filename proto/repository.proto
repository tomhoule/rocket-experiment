syntax = "proto3";
package repository;

import "google/api/annotations.proto";

service EthicsRepository {
  rpc GetSchema (GetSchemaParams) returns (EthicsSchema) {
    option (google.api.http) = {
      get: "/v1/ethics/schema"
    };
  }
  rpc CreateEdition (Edition) returns (Edition) {
    option (google.api.http) = {
      post: "/v1/ethics/editions"
    };
  }
  rpc GetEditions (GetEditionsParams) returns (Editions) {
    option (google.api.http) = {
      get: "/v1/ethics/editions"
    };
  }
  rpc GetFragments (GetFragmentsParams) returns (EthicsFragments) {
    option (google.api.http) = {
      get: "/v1/ethics/fragments"
    };
  }
  rpc EditFragment (EthicsFragment) returns (EthicsFragment) {
    option (google.api.http) = {
      post: "/v1/ethics/fragments"
    };
  }
}

message GetFragmentsParams {
  string edition_id = 1;
}

message GetEditionsParams {
  string languages = 1;
}

message Edition {
  string id = 1;
  string title = 2;
  string slug = 3;
  string editor = 4;
  int32 year = 5;
  string language_code = 6;
  string created_at = 7;
  string updated_at = 8;
}

message Editions {
  repeated Edition data = 1;
}

message GetSchemaParams {}

message EthicsFragments {
  map<string, EthicsFragment> fragments = 1;
}

message EthicsFragment {
  string path = 1;
  string edition_id = 2;
  string value = 3;
}

message EthicsSchema {
  enum NodeType {
    UNSPECIFIED = 0;
    UNTITLED = 1;
    ALITER = 2;
    APPENDIX = 3;
    AXIOMA = 4;
    CAPUT = 5;
    COROLLARIUM = 6;
    DEFINITIO = 7;
    DEMONSTRATIO = 8;
    EXPLICATIO = 9;
    LEMMA = 11;
    PARS = 12;
    POSTULATUM = 13;
    PRAEFATIO = 14;
    PROPOSITIO = 15;
    SCHOLIUM = 16;
  }

  message Node {
    NodeType node_type = 1;
    oneof identifier {
      int32 num = 2; // for numbered fragments
      string title = 3; // for scopes
    }
    repeated Node children = 4;

  }

  repeated Node parts = 1;
}
